import axios from 'axios'

class DadataApiService {
  constructor() {
    this.baseURL = 'https://suggestions.dadata.ru/suggestions/api/4_1/rs'
    this.apiToken = 'f64233b4b6e48a66e94cde958f4ce1e67f854ac0'
    this.apiSecret = '80c252aad82f30bd2913b4c340cc37dafa9fea23'
  }

  // –ü–æ–∏—Å–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ –ò–ù–ù –∏–ª–∏ –û–ì–†–ù
  async findParty(inn) {
    try {
      console.log('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ DaData API:', {
        url: `${this.baseURL}/findById/party`,
        query: inn,
        token: this.apiToken
      })
      
      const response = await axios.post(`${this.baseURL}/findById/party`, {
        query: inn,
        count: 1
      }, {
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          'Authorization': `Token ${this.apiToken}`
        }
      })

      console.log('üì® –û—Ç–≤–µ—Ç –æ—Ç DaData API:', response.data)

      return {
        success: true,
        data: response.data
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤ DaData API:', error)
      return this.handleError(error)
    }
  }

  // –ü–æ–∏—Å–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (–ø–æ–¥—Å–∫–∞–∑–∫–∏)
  async suggestParty(query) {
    try {
      const response = await axios.post(`${this.baseURL}/suggest/party`, {
        query: query,
        count: 10
      }, {
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          'Authorization': `Token ${this.apiToken}`
        }
      })

      return {
        success: true,
        data: response.data
      }
    } catch (error) {
      return this.handleError(error)
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
  handleError(error) {
    let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ DaData API'
    
    if (error.response) {
      const status = error.response.status
      const data = error.response.data
      
      switch (status) {
        case 400:
          errorMessage = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ DaData API'
          break
        case 401:
          errorMessage = '–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á DaData'
          break
        case 403:
          errorMessage = '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ DaData API'
          break
        case 404:
          errorMessage = '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
          break
        case 429:
          errorMessage = '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ DaData API'
          break
        default:
          errorMessage = data?.message || `–û—à–∏–±–∫–∞ DaData API: ${status}`
      }
    } else if (error.request) {
      errorMessage = '–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å DaData API'
    }

    return {
      success: false,
      error: errorMessage
    }
  }
}

export default new DadataApiService()
